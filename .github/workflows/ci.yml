name: CI
env:
  VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.ORG_ID }}

on:
  pull_request:
    types: [labeled, synchronize, edited]
    branches:
      - main
    paths-ignore:
      - ".nxignore"

permissions:
  id-token: write
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.pull_request.labels.*.name, 'PR status: review ready') }}"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "18.19.1"
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Setup Canvas
        run: npm rebuild canvas
      - name: Run test
        run: yarn test

  preview:
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.pull_request.labels.*.name, 'PR status: review ready') }}"
    timeout-minutes: 10
    environment: testing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "18.19.1"
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: preview-deployment
        run: |
          GITHUB_PREVIEW_URL=$(vercel --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "GITHUB_PREVIEW_URL=$GITHUB_PREVIEW_URL" >> $GITHUB_ENV
      - name: Generate Preview Link
        id: preview-link
        run: |
          echo "Preview URL: $GITHUB_PREVIEW_URL"
      - name: Add the preview report to pull request
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ env.GITHUB_PREVIEW_URL }}
